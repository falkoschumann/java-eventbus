buildscript {
    repositories {
        mavenCentral()
    }
    dependencies {
        classpath 'biz.aQute.bnd:biz.aQute.bnd.gradle:3.4.0'
    }
}

apply plugin: 'findbugs'
apply plugin: 'java'
apply plugin: 'maven'
apply plugin: 'biz.aQute.bnd.builder'

group = 'de.muspellheim'
version = '1.1.0'

sourceCompatibility = 1.8
compileJava.options.encoding = 'UTF-8'

repositories {
    jcenter()
}

dependencies {
    testImplementation 'junit:junit:4.12'
}

jar {
    manifest {
        attributes('Bundle-Name': project.name[0].toUpperCase() + project.name.substring(1))
        attributes('Bundle-SymbolicName': project.group + '.' + project.name)
        attributes('Export-Package': project.group + '.' + project.name + '.*', '-sources': 'true',)
    }
}

task sourcesJar(type: Jar, dependsOn: classes) {
    classifier = 'sources'
    from sourceSets.main.allSource
}

task javadocJar(type: Jar, dependsOn: javadoc) {
    classifier = 'javadoc'
    from javadoc.destinationDir
}

artifacts {
    archives sourcesJar
    archives javadocJar
}

def bintrayUser = project.hasProperty('bintrayUser') ? project.property('bintrayUser') : System.getenv('BINTRAY_USER')
def bintrayApiKey = project.hasProperty('bintrayApiKey') ? project.property('bintrayApiKey') : System.getenv('BINTRAY_API_KEY')
uploadArchives {
    repositories {
        mavenDeployer {
            repository(url: "https://api.bintray.com/maven/falkoschumann/maven/${project.name}/;publish=0") {
                authentication(userName: bintrayUser, password: bintrayApiKey)
            }
        }
    }
}

task distZip(type: Zip) {
    from 'src/dist'
    from jar.outputs.files
    from sourcesJar.outputs.files
    from javadocJar.outputs.files
    from(projectDir) {
        include('README.md', 'CHANGELOG.md', 'LICENSE.txt')
        rename { fileName -> fileName.replace('.md', '.txt') }
    }
}

tasks.withType(FindBugs) {
    reports {
        xml.enabled false
        html.enabled true
    }
}
